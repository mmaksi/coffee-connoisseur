import Head from "next/head";
import Image from "next/image";
import { useEffect } from "react";
import Banner from "../components/Banner";
import Card from "../components/Card";
import { useTrackLocation } from "../hooks/useTrackLocation";
import { fetchCoffeeStores } from "../lib/coffee-stores";
import styles from "../styles/Home.module.css";

// data will be stored in a CDN after the build process
export async function getStaticProps() {
  // code in this function runs in the server only (safe)
  const coffeeStores = await fetchCoffeeStores(
    "33.893582981652145%2C35.47158364033414"
  );

  return {
    // passed as props to this page FC
    props: { coffeeStores },
  };
}

export default function Home({ coffeeStores }) {
  const { handleTrackLocation, coords, locationErrorMsg, isLoading } =
    useTrackLocation();

  useEffect(() => {
    async function fetchNearbyStores() {
      try {
        const coffeeStores = await fetchCoffeeStores(coords, "coffee", 30);
        console.log({ coffeeStores });
        return coffeeStores;
      } catch (error) {
        console.log(error);
      }
    }
    fetchNearbyStores();
  }, [coords]);

  const clickHandler = () => {
    handleTrackLocation();
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Coffee Connoisseur</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Banner
          buttonText={isLoading ? "Locating..." : "View stores nearby"}
          clickHandler={clickHandler}
        />
        {locationErrorMsg && <p>Something went wrong: {locationErrorMsg}</p>}
        <div className={styles.heroImage}>
          <Image src="/static/hero-image.png" width={700} height={400} />
        </div>
        {coffeeStores.length && (
          <div className={styles.sectionWrapper}>
            <h2 className={styles.heading2}>Beirut Stores</h2>
            <div className={styles.cardLayout}>
              {coffeeStores.map(({ fsq_id, name, description, imgUrl }) => {
                return (
                  <Card
                    key={fsq_id}
                    name={name}
                    description={description}
                    imgUrl={imgUrl}
                    href={`/coffee-store/${fsq_id}`}
                    className={styles.card}
                  />
                );
              })}
            </div>
          </div>
        )}
      </main>

      <footer className={styles.footer}></footer>
    </div>
  );
}
